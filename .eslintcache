[{"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\index.js":"1","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\App.js":"2","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Header\\index.js":"3","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\store\\index.js":"4","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\MovieDetails\\index.js":"5","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Movies\\index.js":"6","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Favorites\\index.js":"7","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\reducers\\rootReducer.js":"8","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\reducers\\favoritesReducer.js":"9","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\reducers\\queryReducer.js":"10","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Movies\\Movie\\index.js":"11","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Favorites\\FaveMovie\\index.js":"12"},{"size":570,"mtime":1611367239331,"results":"13","hashOfConfig":"14"},{"size":748,"mtime":1611368008198,"results":"15","hashOfConfig":"14"},{"size":4082,"mtime":1611406998024,"results":"16","hashOfConfig":"14"},{"size":239,"mtime":1611367010685,"results":"17","hashOfConfig":"14"},{"size":4562,"mtime":1611403467928,"results":"18","hashOfConfig":"14"},{"size":4414,"mtime":1611408553205,"results":"19","hashOfConfig":"14"},{"size":1412,"mtime":1611404583511,"results":"20","hashOfConfig":"14"},{"size":478,"mtime":1611368164637,"results":"21","hashOfConfig":"14"},{"size":715,"mtime":1611389894946,"results":"22","hashOfConfig":"14"},{"size":1419,"mtime":1611408183677,"results":"23","hashOfConfig":"14"},{"size":3245,"mtime":1611409152755,"results":"24","hashOfConfig":"14"},{"size":2488,"mtime":1611405775600,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"124ablr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\index.js",[],["54","55"],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\App.js",[],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Header\\index.js",[],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\store\\index.js",[],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\MovieDetails\\index.js",["56","57","58"],"import React from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Image, Button, Spinner, Container, Badge } from 'react-bootstrap'\nimport './style.css'\n\nconst MovieDetails = () => {\n\n    const { movieDetails, loading, recommendations } = useSelector(state => state.query)\n    const favorites = useSelector(state => state.favorites.favoriteMovies)\n    const dispatch = useDispatch()\n\n    const showDetails = async (id) => {\n        try {\n            \n            dispatch({ type: \"QUERY_STARTS\" })\n            const movie = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n            const details = await movie.json()\n            const recommendationsDB = await fetch(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\n            const recommendations = await recommendationsDB.json()\n            console.log(\"RECS2\",recommendations);\n            dispatch({ type: \"MOVIE_DETAILS\", payload: { movieDetails: details, recommendations: recommendations }  })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const addToFavoritesHandler = (movie) => {\n        dispatch({ type: \"ADD_TO_FAVORITES\", payload: movie  })\n    }\n\n    const removeToFavoritesHandler = (movie) => {\n        dispatch({ type: \"REMOVE_FROM_FAVORITES\", payload: movie  })\n    }\n\n    return (\n        <Container style={{paddingTop: \"16px\"}}>\n         {loading ?\n            <div style={{ display: \"flex\", height: \"70vh\",  alignItems: \"center\", justifyContent: \"center\" }}>\n                <Spinner animation=\"border\" variant=\"primary\" />\n                </div> :\n            <div>\n            <div style={{ display: 'flex', flexDirection: \"row\" }}>\n            <Image width={300} src={`https://image.tmdb.org/t/p/original/${movieDetails.poster_path}`} rounded />\n            <div style={{ marginLeft: \"16px\" }}>\n                <h2>{movieDetails.title}</h2>\n                \n                {movieDetails.genres.map((genre, index) => {\n                    if(index > 4) {\n                        return\n                    } else {\n                        if(index === 0) {\n                            return <Badge pill style={{ marginRight: \"5px\" }} key={genre.id} variant=\"success\">{genre.name}</Badge>\n                        }\n                        if(index === 1) {\n                            return <Badge pill style={{ marginRight: \"5px\" }} key={genre.id} variant=\"primary\">{genre.name}</Badge>\n                        }\n                        if(index === 2) {\n                            return <Badge pill style={{ marginRight: \"5px\" }} key={genre.id} variant=\"warning\">{genre.name}</Badge>\n                        }\n                        if(index === 3) {\n                            return <Badge pill style={{ marginRight: \"5px\" }} key={genre.id} variant=\"danger\">{genre.name}</Badge>\n                        }\n                    }\n                })}\n                <br />\n                <Badge variant=\"secondary\">Release Date: {movieDetails.release_date}</Badge>\n\n               \n                \n                <p style={{ marginTop: \"24px\" }}>Summary: {movieDetails.overview}</p>\n                \n                <p>Rating: {movieDetails.vote_average}/10</p>\n                {favorites.some(mov => mov.id === movieDetails.id) ? <Button className=\"button-outline\" onClick={() => removeToFavoritesHandler(movieDetails.id)} variant=\"outline-danger\">Remove from Favorites</Button> :\n                <Button className=\"button-outline\" onClick={() => addToFavoritesHandler(movieDetails)} variant=\"outline-primary\">Add to Favorites</Button>}\n            </div> \n            </div>\n            <div style={{ marginTop: \"24px\" }}>\n                <h4>Similar Movies:</h4>\n            </div>\n            <div style={{ display:\"flex\", justifyContent: \"space-between\" }}>\n                {recommendations.results.length > 0 ? recommendations?.results.map((movie, index) => {\n                    if(index >= 10) {\n                        return\n                    } else {\n                        return <Image onClick={() => showDetails(movie.id)} style={{cursor: 'pointer'}} key={movie.id} width={100} src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`} rounded />\n                    }\n                   \n                }): <h5>No similar movies found</h5>}\n            </div>\n            </div>\n            }\n            \n        </Container>\n    )\n}\n\nexport default MovieDetails","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Movies\\index.js",["59","60","61"],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Favorites\\index.js",["62","63"],"import React, { useEffect } from 'react'\nimport { Container, Button, Spinner, Col, Row } from 'react-bootstrap'\nimport { useSelector } from 'react-redux'\nimport FaveMovie from './FaveMovie'\n\nconst Favorites = () => {\n\n    const favorites = useSelector(state => state.favorites.favoriteMovies)\n    const { queryType, movies, loading } = useSelector(state => state.query)\n\n    useEffect(() => {\n\n    }, [])\n\n    return (\n        <Container style={{ padding: \"16px\" }}>\n            <h3>Favorites</h3>\n            {loading ?\n                <Button variant=\"primary\" disabled>\n                    <Spinner\n                        as=\"span\"\n                        animation=\"grow\"\n                        size=\"lg\"\n                        role=\"status\"\n                        aria-hidden=\"true\"\n                    />\n                Loading...\n            </Button> :\n               \n                    <Row style={{ display: \"flex\", justifyContent: \"center\", alignItems: 'center' }}>\n                        {favorites.map(movie => {\n                            return (\n                                <Col lg={3} xs={6} md={4}>\n                                    <FaveMovie movie={movie} />\n                                </Col>\n                            )\n                        })}\n\n                    </Row>\n               \n            }\n        </Container>\n        \n    )\n}\n\nexport default Favorites","C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\reducers\\rootReducer.js",[],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\reducers\\favoritesReducer.js",[],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\redux\\reducers\\queryReducer.js",[],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Movies\\Movie\\index.js",["64"],"C:\\Users\\Rommel\\Desktop\\movie_watchlist\\src\\components\\Favorites\\FaveMovie\\index.js",["65","66","67"],"import React, { useState } from 'react'\nimport { Card, Button, Image, Fade, OverlayTrigger, Tooltip } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { FaTimesCircle } from \"react-icons/fa\";\nimport \"./style.css\"\n\nconst FaveMovie = ({ movie }) => {\n\n    const [ hoverMovieId, setHoverMovieId ] = useState(\"\")\n\n    const history = useHistory()\n\n    const dispatch = useDispatch()\n\n    const showDetails = async (id) => {\n        try {\n            history.push('/details')\n            dispatch({ type: \"QUERY_STARTS\" })\n            const movie = await fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_API_KEY}&language=en-US`)\n            const details = await movie.json()\n            const recommendationsDB = await fetch(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${process.env.REACT_APP_API_KEY}&language=en-US&page=1`)\n            const recommendations = await recommendationsDB.json()\n            console.log(\"RECS\",recommendations);\n            dispatch({ type: \"MOVIE_DETAILS\", payload: { movieDetails: details, recommendations: recommendations }  })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const removeToFavoritesHandler = (movie) => {\n        dispatch({ type: \"REMOVE_FROM_FAVORITES\", payload: movie  })\n    }\n\n    return (\n        <Card className=\"card-image\" onMouseLeave={() => setHoverMovieId('')} onMouseOver={() => setHoverMovieId(movie.id)} style={{ flex: 1, marginBottom: \"16px\", position: \"relative\" }}>\n\n<OverlayTrigger\n      placement=\"bottom-end\"\n      overlay={\n        <Tooltip>\n          Remove from Favorites\n        </Tooltip>\n      }\n    >\n      <FaTimesCircle onClick={() => removeToFavoritesHandler(movie.id)} size={22} color=\"white\" style={{ position: \"absolute\", cursor: \"pointer\", top: \"1%\", left: \"90%\", display: hoverMovieId === movie.id ? \"\" : \"none\" }} />\n    </OverlayTrigger>\n\n\n        \n\n        <Button style={{ position: \"absolute\", top: \"35%\", width: \"80%\", marginLeft: \"10%\", display: hoverMovieId === movie.id ? \"\" : \"none\" }} size=\"lg\"  onClick={() => showDetails(movie.id)} variant=\"info\">Show Details</Button>\n\n        <Card.Img variant=\"top\" height={330} src={`https://image.tmdb.org/t/p/original/${movie.poster_path}`}/>\n            <Card.Body>\n                <Card.Title>{movie.title}</Card.Title>\n            </Card.Body>\n        </Card>\n    )\n}\n\nexport default FaveMovie",{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":47,"column":57,"nodeType":"74","messageId":"75","endLine":47,"endColumn":59},{"ruleId":"72","severity":1,"message":"76","line":49,"column":25,"nodeType":"77","messageId":"78","endLine":49,"endColumn":31},{"ruleId":"72","severity":1,"message":"76","line":83,"column":25,"nodeType":"77","messageId":"78","endLine":83,"endColumn":31},{"ruleId":"79","severity":1,"message":"80","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"79","severity":1,"message":"83","line":3,"column":48,"nodeType":"81","messageId":"82","endLine":3,"endColumn":56},{"ruleId":"79","severity":1,"message":"84","line":3,"column":58,"nodeType":"81","messageId":"82","endLine":3,"endColumn":62},{"ruleId":"79","severity":1,"message":"85","line":9,"column":13,"nodeType":"81","messageId":"82","endLine":9,"endColumn":22},{"ruleId":"79","severity":1,"message":"86","line":9,"column":24,"nodeType":"81","messageId":"82","endLine":9,"endColumn":30},{"ruleId":"79","severity":1,"message":"87","line":2,"column":24,"nodeType":"81","messageId":"82","endLine":2,"endColumn":29},{"ruleId":"79","severity":1,"message":"87","line":2,"column":24,"nodeType":"81","messageId":"82","endLine":2,"endColumn":29},{"ruleId":"79","severity":1,"message":"88","line":2,"column":31,"nodeType":"81","messageId":"82","endLine":2,"endColumn":35},{"ruleId":"79","severity":1,"message":"89","line":4,"column":23,"nodeType":"81","messageId":"82","endLine":4,"endColumn":34},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CardDeck' is defined but never used.","'Card' is defined but never used.","'queryType' is assigned a value but never used.","'movies' is assigned a value but never used.","'Image' is defined but never used.","'Fade' is defined but never used.","'useSelector' is defined but never used.","no-global-assign","no-unsafe-negation"]